"""
找出满足a+b+c=1000，并且a^2+b^2=c^2的所有组合
方法一：
    使用枚举法
"""
import time

"""
程序运行的步骤：时间频度
Tn = 1000*1000*3 粗分
Tn = 1000*1000*8 细分
将数据的规模进行改变，时间频度的计算式子也会改变
Tn = n*n*3 = 3*n^2
当n为无穷大时，式子中谁的值更大，那么的时间复杂度就是谁
使用大O表示  O(n2)

顺序结构的时间复杂度：时间复杂度按照加法来计算 O(m+n)
    a列表的长度为m, b列表的长度为n 对这两个列表进行遍历求和，那么时间复杂度为O(m+n)
循环结构时间复杂度使用乘法表示 例如:for循环 
分支结构的时间复杂度取最大值
没有特殊说明时，时间复杂度都为最坏的时间的复杂度

最优时间复杂度：算法完成工作最少需要多少时间
最坏时间复杂度：算法完成工作最久需要多少时间
平均时间复杂度：算法完成工作平均需要多少时间
均摊时间复杂度：平均时间复杂度的补充，应用场景极少
"""

start_time = time.time()
for a in range(0, 1001):
    for b in range(0, 1001):
        c = 1000 - a - b
        if a + b + c == 1000 and a ** 2 + b ** 2 == c ** 2:
            print(f'组合{a},{b},{c}满足条件')

print(f'程序结束时间为{time.time() - start_time}')
